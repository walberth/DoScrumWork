@model AgileWork.ModelView.ProjectViewModel

@{
    ViewBag.Title = "ShowDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="containerProyectDetail" class="box box-primary container-opacity">
    <div class="box-header">
        <h3 class="box-title textOverflow-boxTitles"><i class="fa fa-tags" aria-hidden="true"></i><span class="space-subtitle">Detalle de proyecto</span></h3>
    </div>
    <div class="box-body">
        <div class="row row-fixed-zero">
            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-3">
                <div class="row row-fixed-zero margin-top-2perc">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <label for="iNameProject" class="control-label">Nombre</label>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.LabelFor(m => m.Name, new { placeholder = "Nombre de proyecto", @class = "form-control", id="iNameProject" })
                        @*<input type="text" class="form-control" id="iNameProject" readonly="readonly" placeholder="Nombre de proyecto" />*@
                    </div>
                </div>
                <div class="row row-fixed-zero margin-top-2perc">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <label for="iDatesProject" class="control-label">Fechas</label>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @*TODO: CHAMBIAR*@
                        @Html.LabelFor(m => m.StartDate, new {placeholder = "Rango de fechas", @class = "form-control", id = "iDatesProject"})
                        @*<input type="text" class="form-control" id="iDatesProject" disabled="" placeholder="Rango de fechas" />*@
                    </div>
                </div>
                <div class="row row-fixed-zero margin-top-2perc">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <label>Descripci&oacute;n</label>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.TextAreaFor(m => m.Description, new {placeholder = "Descripción del proyecto", @class = "form-control", id = "taDescriptionProject", rows="3"})
                        @*<textarea id="taDescriptionProject" class="form-control" rows="3" readonly="readonly" placeholder="Descripci&oacute;n del proyecto..."></textarea>*@
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-5">
                <div id="containerUserStories" class="box box-cus margin-top-2perc box-task">
                    <div class="box-header with-border">
                        <h3 class="box-title textOverflow-boxTitles container-task-header">Historias de Usuario</h3>
                    </div>
                    <div class="box-body">
                        <div id="containerUserStoriesDetail" class="row row-fixed-zero"></div>
                    </div>
                    <div class="box-footer">
                        <button type="button" id="btnCreateTask" class="btn btn-info btn-xs">Crear</button>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-4">
                <div id="containerSprints" class="box box-cus margin-top-2perc box-task">
                    <div class="box-header with-border">
                        <h3 class="box-title textOverflow-boxTitles container-task-header">Sprints</h3>
                    </div>
                    <div class="box-body">
                        <div id="containerSprintDetail" class="row row-fixed-zero">
                            <span id="msgEmptySprints">Listado de sprints vac&iacute;o</span>
                        </div>
                    </div>
                    <div class="box-footer">
                        <button type="button" id="btnCreateSprint" class="btn btn-info btn-xs">Crear</button>
                        <button type="button" id="btnMatchSprintHU" class="btn btn-warning btn-xs">Vincular con HU</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Modal Create or Edit Task-->
<div id="taskModal" class="modal fade" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-cust">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 id="taskModalTitle" class="modal-title modal-header-title">[Create_Task]</h4>
            </div>
            <div class="modal-body modal-body-cust">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 form-line-component-opt1 txt-align-right">
                        <label for="iNameTask" class="control-label">Nombre</label>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-8 col-lg-9">
                        <input data-freeze="view" type="text" class="form-control" id="iNameTask" placeholder="Nombre de tarea" />
                    </div>
                </div>
                <div class="row margin-top-2perc">
                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 form-line-component-opt3 txt-align-right">
                        <label>Descripci&oacute;n</label>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-8 col-lg-9">
                        <textarea data-freeze="view" id="taDescriptionTask" class="form-control" rows="2" placeholder="Descripci&oacute;n de tarea..."></textarea>
                    </div>
                </div>
                <div id="containerResponsibleTask" class="row margin-top-2perc">
                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 form-line-component-opt1 txt-align-right">
                        <label>Responsable</label>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-8 col-lg-9">
                        <select data-freeze="view" id="sResponsibleTask" class="form-control select2"></select>
                    </div>
                </div>
                <div class="row margin-top-2perc">
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-3 form-line-component-opt1 txt-align-right">
                        <label>Esfuerzo</label>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-3">
                        <input data-freeze="view" type="text" class="form-control" id="iEffortTask" placeholder="Esfuerzo" />
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-3 form-line-component-opt1 txt-align-right">
                        <label>Prioridad</label>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-3">
                        <input data-freeze="view" type="text" class="form-control" id="iPriorityTask" placeholder="Prioridad" />
                    </div>
                </div>
                <div class="row margin-top-2perc">
                    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 form-line-component-opt4 txt-align-right">
                        <label>Criterio de Aceptaci&oacute;n</label>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-8 col-lg-9">
                        <textarea data-freeze="view" id="taCriteriaOfAcceptanceTask" class="form-control" rows="3" placeholder="Criterios de aceptaci&oacute;n..."></textarea>
                    </div>
                </div>
            </div>
            <div id="mUserStoryFooter" class="modal-footer">
                <button type="button" id="mActionTask" data-action="[action]" class="btn btn-primary btn-sm" data-dismiss="modal">[Action_Task]</button>
            </div>
        </div>
    </div>
</div>

<!--Container User Story Template-->
<script id="temp-user-story-container" type="text/x-handlebars-template">
    <div id="containerItemUserStory{{id}}" class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
        <div class="row row-fixed-zero external-event" {{{style}}}>
            <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                <div class="container-user-story-content"><span id="nameItemUserStory{{id}}">{{name}}</span></div>
            </div>
            <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                <button id="mBtnUpdateUserStory{{id}}" data-id="{{id}}" type="button" class="btn btn-box-tool container-user-story-tools" data-widget="collapse"><i class="fa fa-plus-circle"></i></button>
            </div>
        </div>
    </div>
</script>

<!--Container Sprint Template-->
<script id="temp-sprint-container" type="text/x-handlebars-template">
    <div id="containerItemSprintParent" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="row row-fixed-zero external-event" {{{style}}}>
            <div class="container-user-story-content">
                <div class="row row-fixed-zero">
                    <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                        <input type="text" id="nameItemSprint" class="form-control sprint-container input-sprint-action" />
                    </div>
                    <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
                        <button id="btnItemSprintCreate" type="button" class="btn-sprint-action btn btn-box-tool container-user-story-tools sprint-icon-create" data-widget="collapse"><i class="fa fa-check"></i></button>
                        <button id="btnItemSprintRemove" type="button" class="btn-sprint-action btn btn-box-tool container-user-story-tools sprint-icon-create" data-widget="collapse"><i class="fa fa-times"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<!--Container Sprint Created Template-->
<script id="temp-sprint-created-container" type="text/x-handlebars-template">
    <div id="containerItemSprintCreated{{id}}" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="row row-fixed-zero external-event" {{{style}}}>
            <div class="container-user-story-content">
                <div class="container-user-story-content"><span id="nameItemSprintCreated{{id}}">{{name}}</span></div>
            </div>
        </div>
    </div>
</script>

<!--Msg Sprint Empty Template-->
<script id="temp-sprints-empty-msg" type="text/x-handlebars-template">
    <span id="msgEmptySprints">Listado de sprints vac&iacute;o</span>
</script>

<script type="text/javascript">
    var sResponsibleTaskValid = true, incrementalAuxUserStories = 0, select2Val = { 'id': null, 'text': null },
        RESOURCES = {
            'select2': "Seleccione",
            'modal': {
                'create': {
                    'title': "Crear Historia de Usuario", 'button': "Crear", 'action': "create"
                },
                'view': {
                    'title': "Detalle Historia de Usuario", 'button': null, 'action': "view"
                }
            }
        },
        COLORS = ['#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#dd4b39', '#b32d00', '#ff8c1a', '#99cc00',
            '#9900cc', '#663300'],
        colorsIncrementalAux = 0, colorsTotalAux = COLORS.length - 1, dataResponsibles = [], userStories = {},
        itemUserStoryAux = {}, $select, data, idProject, incrementalAuxSprints = 0, colorsIncrementalAuxSprint = 0,
        sprintCreated = true, styleSprint;

    function initialize() {
        initializeEvents();
        renderProjectDetail();
        getAllResponsibles();
    }

    function initializeEvents() {
        $("#btnCreateTask").click(function () {
            $("#taskModal").modal("show");
            $('#taskModalTitle').text(RESOURCES.modal.create.title);
            $('#mActionTask').text(RESOURCES.modal.create.button);
            $('#mUserStoryFooter').removeClass('hidden');
            $('#mActionTask').attr('data-action', RESOURCES.modal.create.action);
            $('#taskModal').find('[data-freeze="view"]').removeAttr('readonly');
            $select.prop('disabled', false);
            cleanFormUserStoryModal();
        });
        $("#taskModal").on('show.bs.modal', function () {
            if (sResponsibleTaskValid) {
                sResponsibleTaskValid = false;
                buildResponsibleComponent();
            }
        });
        $("#mActionTask").click(function () {
            var $this = $(this), action = $this.attr('data-action');
            if (action === 'create') {
                if (Object.keys(userStories).length === 0) {
                    $('#containerUserStoriesDetail').empty();
                }
                incrementalAuxUserStories++;
                userStories[incrementalAuxUserStories.toString()] = {
                    'Name': $('#iNameTask').val(), 'IdProject': idProject, 'Description': $('#taDescriptionTask').val(),
                    'IdUserResponsable': select2Val.id, 'UserResponsable': select2Val.text,
                    'Effort': $('#iEffortTask').val(), 'Priority': $('#iPriorityTask').val(),
                    'AcceptanceCriteria': $('#taCriteriaOfAcceptanceTask').val(), 'aux': incrementalAuxUserStories.toString()
                };
                buildContainerUserStory(userStories[incrementalAuxUserStories.toString()], incrementalAuxUserStories.toString());
                saveToDatabaseUserStory(userStories[incrementalAuxUserStories.toString()]);
            }
        });
        $("#btnCreateSprint").click(function () {
            buildContainerSprint();
        });
        $("#btnMatchSprintHU").click(function () {
            //AQUI PONER URL PARA IR A PAGINA DE RELACIONAR SPRINT CON HISTORIAS DE USUARIO
            location.href = "https://adminlte.io/themes/AdminLTE/pages/forms/general.html";
        });
    }

    function buildResponsibleComponent() {
        $select = $('#sResponsibleTask').select2({
            'theme': 'bootstrap', 'placeholder': RESOURCES.select2, 'language': 'es',
            'minimumResultsForSearch': Infinity, 'data': dataResponsibles,
            'dropdownParent': $('#containerResponsibleTask')
        });
        $select.val(null).trigger('change');
        $select.on('change', function (e) {
            if (typeof $select.select2('data')[0] !== 'undefined') {
                select2Val.id = $(this).val();
                select2Val.text = $select.select2('data')[0].text;
            }
        });
    }

    //function getAllResponsibles() {
    //    var URI = "";
    //    URI = "data/list_responsibles.json";
    //    $.ajax({
    //        'url': URI,
    //        'contentType': "application/json",
    //        'dataType': "json",
    //        'type': "GET",
    //        'cache': true,
    //        'async': true
    //    }).done(function (data, textStatus, jqXHR) {
    //        var datas = data.Data, iData, node;
    //        for (iData in datas) {
    //            node = datas[iData];
    //            dataResponsibles.push({ 'id': node.Uid, 'text': node.Name });
    //        }
    //    }).fail(function (jqXHR, textStatus, errorThrown) {
    //        console.log(jqXHR);
    //        console.log(textStatus);
    //        console.log(errorThrown);
    //    });
    //}

    function renderProjectDetail() {
        var data = dataProjectDetail.Data, dataUserStories = data.UserStories, dataSprints = data.Sprints,
            userStory, iUserStory;
        //General
        $('#iNameProject').val(data.Name);
        buildDatesComponent($('#iDatesProject'), '#containerDates', 'auto',
            { 'startDate': data.StartDate, 'endDate': data.EndDate });
        $('#taDescriptionProject').val(data.Description);
        idProject = data.Uid;
        //Historias de Usuario
        for (iUserStory in dataUserStories) {
            incrementalAuxUserStories++;
            userStory = dataUserStories[iUserStory];
            userStories[incrementalAuxUserStories] = {
                'Uid': userStory.Uid, 'Name': userStory.Name, 'Description': userStory.Description,
                'IdUserResponsable': userStory.IdUserResponsable, 'UserResponsable': userStory.UserResponsable,
                'Effort': userStory.Effort, 'Priority': userStory.Priority,
                'AcceptanceCriteria': userStory.AcceptanceCriteria
            }
            buildContainerUserStory(userStories[incrementalAuxUserStories.toString()], incrementalAuxUserStories.toString());
        }
    }

    function buildContainerUserStory(data, id) {
        var context = {}, nodes = [], project, iProject,
            source = document.getElementById("temp-user-story-container").innerHTML,
            template = Handlebars.compile(source);
        context.name = data.Name;
        context.id = id;
        if (colorsIncrementalAux === colorsTotalAux) {
            colorsIncrementalAux = 0;
        }
        context.style = 'style="background-color: '.concat(COLORS[colorsIncrementalAux]).concat(';')
            .concat(' color: #fff;"');
        colorsIncrementalAux++;
        $('#containerUserStoriesDetail').append(template(context));
        $("#mBtnUpdateUserStory".concat(id)).on('click', function () {
            var $this = $(this), id = $this.attr('data-id');
            itemUserStoryAux = clone(userStories[id]);
            $("#taskModal").modal("show");
            $('#taskModalTitle').text(RESOURCES.modal.view.title);
            $('#mUserStoryFooter').addClass('hidden');
            updateFormUserStoryModal(itemUserStoryAux);
            $('#taskModal').find('[data-freeze="view"]').attr('readonly', 'readonly');
            $select.prop('disabled', true);
        });
    }

    function cleanFormUserStoryModal() {
        $('#iNameTask').val("");
        $('#taDescriptionTask').val("");
        $select.val(null).trigger('change');
        $('#iEffortTask').val("");
        $('#iPriorityTask').val("");
        $('#taCriteriaOfAcceptanceTask').val("");
    }

    function updateFormUserStoryModal(data) {
        $('#iNameTask').val(data.Name);
        $('#taDescriptionTask').val(data.Description);
        $select.val(data.IdUserResponsable).trigger('change');
        $('#iEffortTask').val(data.Effort);
        $('#iPriorityTask').val(data.Priority);
        $('#taCriteriaOfAcceptanceTask').val(data.AcceptanceCriteria);
    }

    function buildContainerSprint() {
        var context = {}, nodes = [], project, iProject,
            source = document.getElementById("temp-sprint-container").innerHTML,
            template = Handlebars.compile(source);
        if (sprintCreated) {
            sprintCreated = false;
            $('#containerSprintDetail').empty();
        }
        if (colorsIncrementalAuxSprint === colorsTotalAux) {
            colorsIncrementalAuxSprint = 0;
        }
        styleSprint = 'style="background-color: '.concat(COLORS[colorsIncrementalAuxSprint]).concat(';')
            .concat(' color: #fff;"');
        context.style = styleSprint;
        colorsIncrementalAuxSprint++;
        $('#containerSprintDetail').append(template(context));
        $("#btnItemSprintCreate").on('click', function () {
            var $this = $(this), id = $this.attr('data-id'), name;
            name = $('#nameItemSprint').val();
            saveToDatabaseSprint({ 'Name': name, 'IdProject': idProject });
            $('#containerItemSprintParent').remove();
            buildContainerCreatedSprint(name, styleSprint);
        });
        $("#btnItemSprintRemove").on('click', function () {
            $('#containerItemSprintParent').remove();
            if (incrementalAuxSprints === 0) {
                buildContainerMsgEmptySprint();
                sprintCreated = true;
            }
        });
    }

    function buildContainerCreatedSprint(name, style) {
        var context = {}, nodes = [], project, iProject,
            source = document.getElementById("temp-sprint-created-container").innerHTML,
            template = Handlebars.compile(source);
        incrementalAuxSprints++;
        context.name = name;
        context.style = style;
        context.id = incrementalAuxSprints;
        $('#containerSprintDetail').append(template(context));
    }

    function buildContainerMsgEmptySprint() {
        var context = {}, nodes = [], project, iProject,
            source = document.getElementById("temp-sprints-empty-msg").innerHTML,
            template = Handlebars.compile(source);
        $('#containerSprintDetail').append(template(context));
    }

    //AQUI SE DEBE INSERTAR EN LA BASE DE DATOS
    function saveToDatabaseUserStory(obj) {
        var data = clone(obj);
        delete data.aux;
        console.log(data);
    }

    function saveToDatabaseSprint(obj) {
        console.log(obj);
    }
</script>

